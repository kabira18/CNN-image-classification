library(EBImage)
library(keras)
##read images
pic1<-c('p1.jpg','p2.jpg','p3.jpg','p4.jpg','p5.jpg',
'c1.jpg','c2.jpg','c3.jpg','c4.jpg','c5.jpg',
'b1.jpg','b2.jpg','b3.jpg','b4.jpg','b5.jpg' )
train<-list()
for (i in 1:15) {train[[i]]<-readImage(pic1[i])}
pic2<-c('p6.jpg','c6.jpg','b6.jpg')
test<-list()
for (i in 1:3) {test[[i]]<-readImage(pic2[i])}
print(train)
print(train[[11]])
print(train[[11]])
display(train[[11]])
summary(train[[11]])
hist(train[[1]])
str(train)
hist(train[[11]])
plot(train[[11]])
par(mfrow=c(3,5))
for (i in 15) {plot(train[[i]])
}
for (i in 15),plot(train[[i]])
for (i in 15) plot(train[[i]])
for (i in 1:15) plot(train[[i]])
par(mfrow=c(1,1))
str(train)
str(train)
for (i in 1:15) {train[[i]]<-resize(mypics[[i]],100,100)}
for (i in 1:15) {train[[i]]<-resize(train[[i]],100,100)}
for (i in 1:3) {test[[i]]<-resize(test[[i]],100,100)}
train<-combine(train)
x<-tile(train,5)
display(x,title='pictures')
test<-combine(test)
y<-tile(test,3)
display(y,title='pics')
train<-aperm(train,c(4,1,2,3))
test<-aperm(test,c(4,1,2,3))
trainy<-c(0,0,0,0,0,1,1,1,1,1,2,2,2,2,2)
testy<-c(0,1,2)
trainlabels<-to_categorical(trainy)
###one hot encoding
TF_ENABLE_ONEDNN_OPTS=0
trainlabels<-to_categorical(trainy)
trainy<-c(0,0,0,0,0,1,1,1,1,1,2,2,2,2,2),dtype="float32"
trainy<-c(0,0,0,0,0,1,1,1,1,1,2,2,2,2,2)dtype="float32"
trainy<-c(0,0,0,0,0,1,1,1,1,1,2,2,2,2,2),(dtype="float32")
trainy<-c(0,0,0,0,0,1,1,1,1,1,2,2,2,2,2)
testy<-c(0,1,2)
trainlabels<-to_categorical(trainy)
testlabels<-to_categorical(testy)
y_cat<-to_categorical(trainy)
trainlabels<-to_categorical(trainy,num_classes = 3)
trainlabels<-to_categorical(trainy,num_classes =NULL)
install_keras()
detach("package:keras", unload = TRUE)
detach("package:tensorflow", unload = TRUE)
detach("package:keras", unload = TRUE)
detach("package:tensorflow", unload = TRUE)
tensorflow::install_tensorflow()
keras::install_keras()
hist(train[[11]])
